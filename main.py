#!/usr/bin/env python3
"""
Data Analysis and Visualization GUI Application

A comprehensive tool for data analysis with the following features:
- Data Import & Preview
- Interactive Plotting
- Statistical Analysis
- Signal Processing

Author: Generated by GitHub Copilot
"""

import sys
import os

# Add the src directory to the Python path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from PySide6.QtWidgets import QApplication
from PySide6.QtCore import Qt
import darkdetect

from src.gui.main_window import MainWindow


def main():
    """Main entry point for the application."""
    app = QApplication(sys.argv)
    
    # Apply modern styling based on system theme
    if darkdetect.isDark():
        # Use dark fusion style for dark mode
        app.setStyle('Fusion')
        
        # Custom dark palette
        from PySide6.QtGui import QPalette, QColor
        dark_palette = QPalette()
        
        # Window colors
        dark_palette.setColor(QPalette.Window, QColor(53, 53, 53))
        dark_palette.setColor(QPalette.WindowText, QColor(255, 255, 255))
        
        # Base colors
        dark_palette.setColor(QPalette.Base, QColor(25, 25, 25))
        dark_palette.setColor(QPalette.AlternateBase, QColor(53, 53, 53))
        
        # Text colors
        dark_palette.setColor(QPalette.Text, QColor(255, 255, 255))
        dark_palette.setColor(QPalette.BrightText, QColor(255, 0, 0))
        
        # Button colors
        dark_palette.setColor(QPalette.Button, QColor(53, 53, 53))
        dark_palette.setColor(QPalette.ButtonText, QColor(255, 255, 255))
        
        # Highlight colors
        dark_palette.setColor(QPalette.Highlight, QColor(42, 130, 218))
        dark_palette.setColor(QPalette.HighlightedText, QColor(0, 0, 0))
        
        app.setPalette(dark_palette)
    else:
        # Use default style for light mode
        app.setStyle('Fusion')
    
    # Set application properties
    app.setApplicationName("Data Analysis Pro")
    app.setApplicationVersion("1.0.0")
    app.setOrganizationName("DataAnaly")
    
    # Create and show main window
    window = MainWindow()
    window.show()
    
    sys.exit(app.exec())


if __name__ == "__main__":
    main()
